diff --git a/node_modules/sequelize/types/associations/belongs-to-many.d.ts b/node_modules/sequelize/types/associations/belongs-to-many.d.ts
index af3e307..9e5f757 100644
--- a/node_modules/sequelize/types/associations/belongs-to-many.d.ts
+++ b/node_modules/sequelize/types/associations/belongs-to-many.d.ts
@@ -98,6 +98,7 @@ export class BelongsToMany<S extends Model = Model, T extends Model = Model> ext
   public sourceKey: string;
   public targetKey: string;
   public accessors: MultiAssociationAccessors;
+  public through: { model: typeof Model };
   constructor(source: ModelCtor<S>, target: ModelCtor<T>, options: BelongsToManyOptions);
 }
 
diff --git a/node_modules/sequelize/types/data-types.d.ts b/node_modules/sequelize/types/data-types.d.ts
index 2eb6262..e3ad609 100644
--- a/node_modules/sequelize/types/data-types.d.ts
+++ b/node_modules/sequelize/types/data-types.d.ts
@@ -544,6 +544,7 @@ interface ArrayDataTypeConstructor extends AbstractDataTypeConstructor {
 
 export interface ArrayDataType<T extends AbstractDataTypeConstructor | AbstractDataType> extends AbstractDataType {
   options: ArrayDataTypeOptions<T>;
+  type: T;
 }
 
 export interface ArrayDataTypeOptions<T extends AbstractDataTypeConstructor | AbstractDataType> {
diff --git a/node_modules/sequelize/types/dialects/abstract/query-interface.d.ts b/node_modules/sequelize/types/dialects/abstract/query-interface.d.ts
index 782ee82..f71dd1f 100644
--- a/node_modules/sequelize/types/dialects/abstract/query-interface.d.ts
+++ b/node_modules/sequelize/types/dialects/abstract/query-interface.d.ts
@@ -274,6 +274,7 @@ export interface ColumnDescription {
   primaryKey: boolean;
   autoIncrement: boolean;
   comment: string | null;
+  special?: string[];
 }
 
 export interface ColumnsDescription {
@@ -461,7 +462,14 @@ export class QueryInterface {
   /**
    * Shows the index of a table
    */
-  public showIndex(tableName: string | object, options?: QueryOptions): Promise<object>;
+  public showIndex(tableName: string | object, options?: QueryOptions): Promise<{
+    name: string;
+    primary: boolean;
+    unique: boolean;
+    indkey: string;
+    definition: string;
+    fields: { attribute: string }[];
+  }[]>;
 
   /**
    * Put a name to an index
@@ -476,7 +484,19 @@ export class QueryInterface {
   /**
    * Get foreign key references details for the table
    */
-  public getForeignKeyReferencesForTable(tableName: TableName, options?: QueryInterfaceOptions): Promise<object>;
+  public getForeignKeyReferencesForTable(tableName: TableName, options?: QueryInterfaceOptions): Promise<{
+    constraintName: string;
+    constraintSchema: string;
+    constraintCatalog: string;
+    tableName: string;
+    tableSchema: string;
+    tableCatalog: string;
+    columnName: string;
+    referencedTableSchema: string;
+    referencedTableCatalog: string;
+    referencedTableName: string;
+    referencedColumnName: string;
+  }[]>;
 
   /**
    * Inserts a new record
diff --git a/node_modules/sequelize/types/model.d.ts b/node_modules/sequelize/types/model.d.ts
index f42f970..de9e144 100644
--- a/node_modules/sequelize/types/model.d.ts
+++ b/node_modules/sequelize/types/model.d.ts
@@ -1408,6 +1408,8 @@ export interface ModelAttributeColumnOptions<M extends Model = Model> extends Co
    */
   values?: readonly string[];
 
+  _autoGenerated?: boolean;
+
   /**
    * Provide a custom getter for this column. Use `this.getDataValue(String)` to manipulate the underlying
    * values.
