name: Lint, Build, Test and Doc

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Cancel previous running workflows
        uses: fkirc/skip-duplicate-actions@master
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 14.17.6
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        run: yarn install --frozen-lockfile --non-interactive --production=false
      - name: Lint commit message
        uses: wagoid/commitlint-github-action@v2
      - name: lint Javascript
        run: yarn lint

  build:
    name: Building
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.17.6
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Bootstrap
        run: yarn bootstrap
      - name: Build
        run: yarn build
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: 'packages/**/dist/*'
          retention-days: 1

  test:
    name: Testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.17.6
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: 'packages/'
      - name: Send coverage
        uses: ForestAdmin/codeclimate-action@master
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov
          ref: ${{ env.CHECKOUT_REFERENCE }}
          coverageCommand: yarn test:coverage

  doc:
    name: Doc
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.17.6
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Build doc
        run: yarn docs
